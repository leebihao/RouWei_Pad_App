apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

def ORIGINAL_VERSION_CODE = 005
def ORIGINAL_VERSION_NAME = "1.0.5"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    ndkVersion '21.3.6528147'

    defaultConfig {
        applicationId "com.lbh.rouwei"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        flavorDimensions "api"
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a'
//            abiFilters 'armeabi-v7a'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    signingConfigs {
        release {
            storeFile file("scinan_app.keystore")
            storePassword "123456"
            keyAlias "scinan.cn"
            keyPassword "123456"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled false
            signingConfig signingConfigs.release
            zipAlignEnabled true
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                //这里修改apk文件名
                outputFileName = "${productFlavors[0].name}_v${ORIGINAL_VERSION_NAME}_${buildType.name}_${releaseTime()}.apk"
            }
    }

    productFlavors {
//        //全功能版 无tws
//        rouwei_full {
//            applicationIdSuffix ".full"
//            versionCode ORIGINAL_VERSION_CODE
//            versionNameSuffix ORIGINAL_VERSION_NAME + "_full"
//            buildConfigField "String", "ENVIRONMENT", '"full"'
//            manifestPlaceholders = [app_name: "RouWei"]
//        }
//
//        //test
//        rouwei_test {
//            applicationIdSuffix ".test"
//            versionCode ORIGINAL_VERSION_CODE
//            versionNameSuffix ORIGINAL_VERSION_NAME + "_test"
//            buildConfigField "String", "ENVIRONMENT", '"test"'
//            manifestPlaceholders = [app_name: "RouWei_Test"]
//        }
//

        Testapi_scinan_com {
            applicationIdSuffix ".test"
            buildConfigField BOOLEAN, API_DEBUG, TRUE
            buildConfigField BOOLEAN, LOG_DEBUG, TRUE
            buildConfigField BOOLEAN, MQTT_SSL, FALSE
            buildConfigField BOOLEAN, LOG_WRITE, TRUE
            versionNameSuffix ORIGINAL_VERSION_NAME + "_test"
        }

        Api_scinan_com {
            applicationIdSuffix ".full"
            buildConfigField BOOLEAN, API_DEBUG, FALSE
            buildConfigField BOOLEAN, LOG_DEBUG, FALSE
            buildConfigField BOOLEAN, MQTT_SSL, FALSE
            buildConfigField BOOLEAN, LOG_WRITE, FALSE
            versionNameSuffix ORIGINAL_VERSION_NAME + "_full"
        }
    }

    sourceSets {
        //目录结构设置
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', '.apt_generated']
            assets.srcDirs = ['src/main/assets']
            res.srcDirs =
                    [
                            'src/main/res/common',
                            'src/main/res/login',
                            'src/main/res/config',
                            'src/main/res/video_player'
                    ]//res 目录的拆分
        }
    }

}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    api project(path: ':ScinanSDKAndroid')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation 'androidx.multidex:multidex:2.0.0'

    //控件绑定
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    //日志输出库
//    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'
    //MMKV——基于 mmap 的高性能通用 key-value 组件
    implementation 'com.tencent:mmkv-static:1.2.2'
    //通用工具类
//    implementation 'com.blankj:utilcodex:1.29.0'
    //retrofit2 and okHttp 请求相关
    implementation([
            'com.squareup.retrofit2:retrofit:2.9.0',
            'com.squareup.retrofit2:converter-gson:2.9.0',
            'com.squareup.retrofit2:converter-scalars:2.9.0',
            'com.squareup.retrofit2:adapter-rxjava2:2.9.0',
            'com.squareup.okhttp3:logging-interceptor:3.8.1',
            'com.squareup.okhttp3:okhttp:4.2.0',
            "com.squareup.okhttp3:logging-interceptor:3.10.0"
    ])
    implementation 'com.google.code.gson:gson:2.8.5'
    //RxJava2
    implementation([
            'io.reactivex.rxjava2:rxjava:2.2.8',
            'io.reactivex.rxjava2:rxandroid:2.1.1'
    ])
    //AutoDispose解决RxJava内存泄漏
    implementation([
            'com.uber.autodispose2:autodispose:2.0.0',
            'com.uber.autodispose2:autodispose-android:2.0.0',
            'com.uber.autodispose2:autodispose-lifecycle:2.0.0',
            'com.uber.autodispose2:autodispose-androidx-lifecycle:2.0.0'
    ])

    //butterknife控件绑定
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    //日志输出库
    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'
    //Glide加载图片
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    //Gson数据解析
    implementation 'com.google.code.gson:gson:2.8.5'
    //EventBus3
    implementation 'org.greenrobot:eventbus:3.1.1'
    //串口操作库
//    implementation 'tp.xmaihh:serialport:2.1'

    //动态权限请求
    implementation "org.permissionsdispatcher:permissionsdispatcher:4.8.0"
    annotationProcessor "org.permissionsdispatcher:permissionsdispatcher-processor:4.8.0"
    //picker控件
    implementation 'cn.carbswang.android:NumberPickerView:1.2.0'

    //视频播放
    implementation 'com.shuyu:GSYVideoPlayer:7.1.6'

    implementation 'com.tencent.bugly:crashreport:latest.release'
    //其中lat est.release指代最新版本号，也可以指定明确的版本号，例如2.1.5
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
}